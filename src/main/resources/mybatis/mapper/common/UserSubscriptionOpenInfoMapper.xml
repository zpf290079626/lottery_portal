<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zpf.dao.common.UserSubscriptionOpenInfoMapper" >
  <resultMap id="BaseResultMap" type="com.zpf.domain.common.UserSubscriptionOpenInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="CHAR" />
    <result column="sub_type" property="subType" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="modified" property="modified" jdbcType="TIMESTAMP" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="yn" property="yn" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, sub_type, EMAIL, created, modified, operator, yn
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from USER_SUBSCRIPTION_OPEN_INFO
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from USER_SUBSCRIPTION_OPEN_INFO
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zpf.domain.common.UserSubscriptionOpenInfo" >
    insert into USER_SUBSCRIPTION_OPEN_INFO (id, user_id, sub_type, 
      EMAIL, created, modified, 
      operator, yn)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=CHAR}, #{subType,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{modified,jdbcType=TIMESTAMP}, 
      #{operator,jdbcType=VARCHAR}, #{yn,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.zpf.domain.common.UserSubscriptionOpenInfo" >
    insert into USER_SUBSCRIPTION_OPEN_INFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="subType != null" >
        sub_type,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="modified != null" >
        modified,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="yn != null" >
        yn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="subType != null" >
        #{subType,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null" >
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="yn != null" >
        #{yn,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zpf.domain.common.UserSubscriptionOpenInfo" >
    update USER_SUBSCRIPTION_OPEN_INFO
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="subType != null" >
        sub_type = #{subType,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null" >
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="yn != null" >
        yn = #{yn,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zpf.domain.common.UserSubscriptionOpenInfo" >
    update USER_SUBSCRIPTION_OPEN_INFO
    set user_id = #{userId,jdbcType=CHAR},
      sub_type = #{subType,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      modified = #{modified,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR},
      yn = #{yn,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectListByType" parameterType="string" resultMap="BaseResultMap">
    select * from USER_SUBSCRIPTION_OPEN_INFO
    where yn = 1
    and sub_type = #{type}
  </select>
</mapper>